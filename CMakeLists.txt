cmake_minimum_required(VERSION 3.0.0)
project(boost-tutorial VERSION 0.1.0)

set (CMAKE_CXX_STANDARD 11)

include(CTest)
enable_testing()

find_package(Threads)
find_package(Boost)
find_package(cpprestsdk)
if(cpprestsdk_FOUND)
    message(========================== cpprestsdk Build ======================== )
    find_package(cpprestsdk REQUIRED)
    message(cpprestsdk_FOUND: ${cpprestsdk_FOUND} )
    message(cpprestsdk_INCLUDE_DIR: ${cpprestsdk_INCLUDE_DIR} )
    message(cpprestsdk_LIBRARY_DIRS: ${cpprestsdk_LIBRARY_DIRS} )
    message(cpprestsdk_LIBRARIES: ${cpprestsdk_LIBRARIES} )
    message(cpprestsdk_CPPREST_FOUND: ${cpprestsdk_CPPREST_FOUND} )
    message(cpprestsdk_CPPREST_LIBRARY: ${cpprestsdk_CPPREST_LIBRARY} )
endif()

if(Boost_FOUND)
    message(========================== Boost Build ======================== )
    find_package(Boost REQUIRED COMPONENTS system date_time thread program_options)
#     find_package( Boost REQUIRED COMPONENTS system date_time thread)
    message(Boost_FOUND: ${Boost_FOUND} )
    message(Boost_INCLUDE_DIR: ${Boost_INCLUDE_DIR} )
    message(Boost_LIBRARY_DIRS: ${Boost_LIBRARY_DIRS} )
    message(Boost_LIBRARIES: ${Boost_LIBRARIES} )
    message(Boost_SYSTEM_FOUND: ${Boost_SYSTEM_FOUND} )
    message(Boost_SYSTEM_LIBRARY: ${Boost_SYSTEM_LIBRARY} )
    message(Boost_DATE_TIME_FOUND: ${Boost_DATE_TIME_FOUND} )
    message(Boost_PROGRAM_OPTIONS_FOUND: ${Boost_PROGRAM_OPTIONS_FOUND} )
    include_directories(${Boost_INCLUDE_DIR} )
    link_directories(${Boost_LIBRARY_DIRS})
endif()
# add_executable(timer-1 timer-1.cpp)
# target_link_libraries(timer-1 pthread boost_system boost_date_time)

# add_executable(cmd-line-tutorial-1 cmd-line-tutorial-1.cpp)
# target_link_libraries(cmd-line-tutorial-1 pthread boost_system boost_date_time boost_program_options)

add_executable(cpprestsdk-api-server-1 cpprestsdk-api-server-1.cpp)
target_link_libraries(cpprestsdk-api-server-1 PRIVATE cpprestsdk::cpprest)


set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)

